/*
Exercise Two:
A = [ brad, mark, jerry, steve, zack, kate, brad ... steve ]

How would you produce a list of names and the number of occurrences of the name in the array?

The list should be ordered by the number of occurrences.

Example answer :
brad    1242
steve    999
zack    21
kate    10
mark    9
...
jerry    1
*/
package questionTwo;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.HashMap;

public class InterviewQuestionTwo {

	public String[] exerciseTwo(String[] namesArray) {
		
		// Return String Array
		String[] frequencyNamesArray = null;
		// Sort incoming array of names
		Arrays.sort(namesArray);
		
		// Create Map
		HashMap<String, Integer> freqMap = new HashMap<String, Integer>();
		
		// Loop thru String Array and add to HashMap with count as Value
		for(String s : namesArray){
			if( freqMap.containsKey(s) ) {
				freqMap.put(s, freqMap.get(s) + 1);
			} else {
				freqMap.put(s, 1);
			}
		}
		
		// Set Keys in new Array
		ArrayList<String> keyArray = new ArrayList<String>(freqMap.keySet());
		// Sort keyArray
		Collections.sort(keyArray);
		// Create Empty ArrayList
		ArrayList<String> valueArray = new ArrayList<String>();
		for(String kArray : keyArray) {
			valueArray.add(kArray + "<>" + freqMap.get(kArray).toString());
		}
		// reverse order valueArray ArrayList
		Collections.reverse(valueArray);
		// number place holder
		int number = 0;
		frequencyNamesArray = new String[valueArray.size()];
		
		for(int i = valueArray.size() - 1 ; i >= 0 ; --i) {
			frequencyNamesArray[number] = valueArray.get(i);
			++ number;
		}
		return frequencyNamesArray;		
	}
	
	private static HashMap<Integer, String> setNameNCount(String[] namesArray) {
		HashMap<Integer, String> returnNamesWithCount = null;
		Integer keyV = null;
		// Loop thru String Array and add to HashMap with count as Value
		for(String s : namesArray){
			if( !returnNamesWithCount.isEmpty() && returnNamesWithCount.containsValue(s) ) {
				keyV = Integer.parseInt(s);
				returnNamesWithCount.put(returnNamesWithCount.get(s) + 1,s);
			} else {
				returnNamesWithCount.put(1, s);
			}
		}
		
		return returnNamesWithCount;
		
	}
}
